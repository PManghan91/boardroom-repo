name: Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  code-quality:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.13"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
        pip install --dependency-groups dev,test

    - name: Check code formatting with Black
      run: |
        black --check --diff app tests scripts --line-length 119

    - name: Check import sorting with isort
      run: |
        isort --check-only --diff app tests scripts --profile black --line-length 119

    - name: Lint with Ruff
      run: |
        ruff check app tests scripts

    - name: Run tests
      run: |
        pytest tests/ -v

    - name: Run comprehensive quality check
      run: |
        python scripts/code_quality.py --all --report quality-report.txt --fail-on-score 7.0

    - name: Upload quality report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: quality-report-${{ matrix.python-version }}
        path: quality-report.txt

  quality-gate:
    runs-on: ubuntu-latest
    needs: [code-quality]
    if: always()

    steps:
    - name: Check code quality results
      run: |
        echo "Code quality checks completed"
        if [ "${{ needs.code-quality.result }}" != "success" ]; then
          echo "Code quality checks failed"
          exit 1
        fi
        echo "All quality checks passed! âœ…"